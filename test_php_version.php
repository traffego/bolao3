<?php
// Teste espec√≠fico de vers√£o PHP e compatibilidade

error_reporting(E_ALL);
ini_set('display_errors', 1);

echo "<h1>üêò TESTE DE VERS√ÉO PHP</h1>";
echo "<p><strong>Data/Hora:</strong> " . date('Y-m-d H:i:s') . "</p>";

// Informa√ß√µes b√°sicas do PHP
echo "<h2>üìä Informa√ß√µes do PHP</h2>";
echo "<p><strong>Vers√£o Atual:</strong> " . phpversion() . "</p>";
echo "<p><strong>Vers√£o Maior:</strong> " . PHP_MAJOR_VERSION . "." . PHP_MINOR_VERSION . "</p>";
echo "<p><strong>SAPI:</strong> " . php_sapi_name() . "</p>";

// Verificar compatibilidade
echo "<h2>‚úÖ Compatibilidade do Projeto</h2>";

// Requisito m√≠nimo: PHP 7.4+
$minVersion = '7.4.0';
$currentVersion = phpversion();
$isCompatible = version_compare($currentVersion, $minVersion, '>=');

echo "<p><strong>Vers√£o M√≠nima Requerida:</strong> PHP $minVersion</p>";
echo "<p><strong>Vers√£o Atual:</strong> PHP $currentVersion</p>";
echo "<p><strong>Compat√≠vel:</strong> " . ($isCompatible ? '‚úÖ SIM' : '‚ùå N√ÉO') . "</p>";

if (!$isCompatible) {
    echo "<div style='background: #f8d7da; padding: 15px; border-radius: 5px; margin: 15px 0;'>";
    echo "<h3>üö® PROBLEMA CR√çTICO</h3>";
    echo "<p>A vers√£o do PHP √© incompat√≠vel com o projeto!</p>";
    echo "<p><strong>Solu√ß√£o:</strong> Atualizar para PHP 7.4 ou superior.</p>";
    echo "</div>";
}

// Testar recursos espec√≠ficos usados no projeto
echo "<h2>üîß Teste de Recursos PHP</h2>";

// Null coalescing operator (??) - PHP 7.0+
echo "<h3>1. Null Coalescing Operator (??) - PHP 7.0+</h3>";
try {
    $test = null;
    $result = $test ?? 'padr√£o';
    echo "<p>‚úÖ <strong>Funciona:</strong> $result</p>";
} catch (ParseError $e) {
    echo "<p>‚ùå <strong>Erro:</strong> " . $e->getMessage() . "</p>";
}

// PDO com MySQL
echo "<h3>2. PDO MySQL - Extens√£o</h3>";
if (class_exists('PDO') && in_array('mysql', PDO::getAvailableDrivers())) {
    echo "<p>‚úÖ <strong>PDO MySQL dispon√≠vel</strong></p>";
} else {
    echo "<p>‚ùå <strong>PDO MySQL n√£o dispon√≠vel</strong></p>";
}

// JSON functions
echo "<h3>3. Fun√ß√µes JSON</h3>";
if (function_exists('json_encode') && function_exists('json_decode')) {
    $testArray = ['teste' => 'valor'];
    $json = json_encode($testArray);
    $decoded = json_decode($json, true);
    echo "<p>‚úÖ <strong>JSON OK:</strong> " . $json . "</p>";
} else {
    echo "<p>‚ùå <strong>Fun√ß√µes JSON n√£o dispon√≠veis</strong></p>";
}

// Session functions
echo "<h3>4. Sess√µes PHP</h3>";
if (function_exists('session_start')) {
    if (session_status() === PHP_SESSION_NONE) {
        session_start();
    }
    echo "<p>‚úÖ <strong>Sess√µes funcionando</strong></p>";
    echo "<p><strong>Session ID:</strong> " . session_id() . "</p>";
} else {
    echo "<p>‚ùå <strong>Sess√µes n√£o dispon√≠veis</strong></p>";
}

// Extens√µes necess√°rias
echo "<h2>üì¶ Extens√µes Necess√°rias</h2>";
$requiredExtensions = [
    'mysqli' => 'MySQL Improved',
    'pdo' => 'PHP Data Objects',
    'pdo_mysql' => 'PDO MySQL Driver',
    'json' => 'JSON Support',
    'mbstring' => 'Multibyte String',
    'session' => 'Session Support',
    'curl' => 'cURL Support'
];

foreach ($requiredExtensions as $ext => $name) {
    $loaded = extension_loaded($ext);
    $status = $loaded ? '‚úÖ Carregada' : '‚ùå Ausente';
    echo "<p><strong>$name ($ext):</strong> $status</p>";
}

// Configura√ß√µes importantes
echo "<h2>‚öôÔ∏è Configura√ß√µes Importantes</h2>";
$configs = [
    'memory_limit' => 'Limite de Mem√≥ria',
    'max_execution_time' => 'Tempo M√°ximo de Execu√ß√£o',
    'upload_max_filesize' => 'Tamanho M√°ximo de Upload',
    'post_max_size' => 'Tamanho M√°ximo POST',
    'display_errors' => 'Exibir Erros',
    'log_errors' => 'Log de Erros'
];

foreach ($configs as $config => $name) {
    $value = ini_get($config);
    echo "<p><strong>$name:</strong> $value</p>";
}

// Teste de sintaxe do projeto
echo "<h2>üß™ Teste de Sintaxe do Projeto</h2>";

// Testar carregamento dos arquivos principais
$coreFiles = [
    'config/config.php' => 'Configura√ß√£o Principal',
    'config/database.php' => 'Configura√ß√£o de Banco',
    'includes/functions.php' => 'Fun√ß√µes Principais'
];

foreach ($coreFiles as $file => $description) {
    echo "<h4>$description</h4>";
    $fullPath = __DIR__ . '/' . $file;
    
    if (!file_exists($fullPath)) {
        echo "<p>‚ùå <strong>Arquivo n√£o encontrado:</strong> $file</p>";
        continue;
    }
    
    // Verificar sintaxe usando php -l
    $command = "php -l " . escapeshellarg($fullPath) . " 2>&1";
    $output = shell_exec($command);
    
    if (strpos($output, 'No syntax errors') !== false) {
        echo "<p>‚úÖ <strong>Sintaxe OK:</strong> $file</p>";
    } else {
        echo "<p>‚ùå <strong>Erro de sintaxe:</strong> $file</p>";
        echo "<pre>$output</pre>";
    }
}

// Resumo final
echo "<h2>üìã Resumo</h2>";
if ($isCompatible) {
    echo "<div style='background: #d4edda; padding: 15px; border-radius: 5px; margin: 15px 0;'>";
    echo "<h3>‚úÖ PHP COMPAT√çVEL</h3>";
    echo "<p>A vers√£o do PHP est√° compat√≠vel com o projeto.</p>";
    echo "<p>Se ainda h√° erro 500, o problema n√£o √© de compatibilidade PHP.</p>";
    echo "</div>";
} else {
    echo "<div style='background: #f8d7da; padding: 15px; border-radius: 5px; margin: 15px 0;'>";
    echo "<h3>‚ùå PHP INCOMPAT√çVEL</h3>";
    echo "<p>A vers√£o do PHP pode estar causando o erro 500.</p>";
    echo "<p><strong>Solu√ß√£o:</strong> Configurar o servidor para usar PHP 7.4+</p>";
    echo "</div>";
}

echo "<h2>üõ†Ô∏è Pr√≥ximos Passos</h2>";
echo "<ol>";
echo "<li><strong>Se PHP incompat√≠vel:</strong> Alterar vers√£o no cPanel</li>";
echo "<li><strong>Se faltam extens√µes:</strong> Instalar/ativar extens√µes necess√°rias</li>";
echo "<li><strong>Se sintaxe com erro:</strong> Corrigir arquivos com problemas</li>";
echo "<li><strong>Se tudo OK:</strong> Problema n√£o √© relacionado ao PHP</li>";
echo "</ol>";
?>
